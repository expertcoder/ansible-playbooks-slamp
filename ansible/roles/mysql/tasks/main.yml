# mysql56

#NOTE: With google cloud, we are using a decicated MySQL instance, so only install the MySQL client

- name: Install MySQL client only
  yum: name=mysql state=present
  when: hosting_company == "google_cloud"

- name: Install MySQL community release repository
  yum: name=http://repo.mysql.com/mysql57-community-release-el7-9.noarch.rpm state=present
  when: hosting_company != "google_cloud"

- name: Install mysql packages
  yum: name={{ item }} state=latest
  with_flattened:
        - MySQL-python
        - mysql-community-server
        - mysql-community-libs
        - mysql-community-devel
        - mysql-community-bench
  when: hosting_company != "google_cloud"

- name: Start mysqld now!
  service: name=mysqld state=started enabled=true
  when: hosting_company != "google_cloud"

#TODO - PROBLEM HERE
#Sam - 1st November 2016
#I recent updated to mysql 5.7, which  now required a password to access mysql
#So this ansible command just below fails as the correct password is not been used.
#MySQL installs with a temp password. You can get this temp password with a command like this
#
# grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}'
#
# with that password you are able to manually run "mysql -pthepassword" and then change the password with SQL command like
#
#ALTER USER 'root'@'localhost' IDENTIFIED BY 'aBc!123!';
#Note the password policy required a complicated password, I don't know what it is
# you will also need to ensure /root/.my.cnf ends up with the correct password

- name: Update mysql root password for all root accounts
  mysql_user: name=root host=localhost password="{{ mysql_password }}"
  when: hosting_company != "google_cloud"

#This will setup so when you run "mysql" from the terminal, you are not asked for the password
- name: setup /root/.my.cnf
  action: template src=my.cnf.j2 dest=/root/.my.cnf

